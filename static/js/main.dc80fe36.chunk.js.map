{"version":3,"sources":["utils/countTotalFeedback.js","utils/countPositiveFeedbackPercentage.js","components/FeedBackOptions/StyledComponents.jsx","components/FeedBackOptions/FeedBackOptions.jsx","utils/capitalize.js","components/Statistics/StyledComponents.jsx","components/Statistics/Statistics.jsx","components/Container.jsx","components/Section.jsx","App.js","index.js"],"names":["countTotalFeedback","stats","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","positiveFeedbackPercentage","Math","round","good","ListItem","styled","li","Title","h2","Button","button","ButtonList","ul","FeedBackOptions","buttonList","this","props","map","name","type","onClick","handleIncrement","string","charAt","toUpperCase","slice","Component","Statistics","neutral","bad","defaultProps","Container","div","Section","section","initialState","feedbackOptions","option","App","state","manageState","e","target","dataset","setState","currentState","ReactDom","render","StrictMode","document","querySelector"],"mappings":"0VAIeA,EAJY,SAACC,GAC1B,OAAOC,OAAOC,OAAOF,GAAOG,QAAO,SAACC,EAAIC,GAAL,OAAeD,EAAMC,IAAO,ICOlDC,EANyB,SAACN,GAEvC,IAAMO,EAA6BC,KAAKC,MAAMT,EAAMU,KAAOX,EAAmBC,GAAS,KACvF,MAAM,GAAN,OAAUO,EAAV,M,cCHWI,EAAWC,IAAOC,GAAV,mHAQRC,EAAQF,IAAOG,GAAV,0CAILC,EAASJ,IAAOK,OAAV,6CAINC,EAAaN,IAAOO,GAAV,+H,OCWPC,E,4JAxBd,WAAU,IAAD,OACCC,EAAeC,KAAKC,MAApBF,WAER,OACE,gCACE,cAACP,EAAD,oCACA,cAACI,EAAD,UACGG,GAAcA,EAAWG,KAAI,SAAAC,GAAI,OAChC,cAACd,EAAD,UACE,cAACK,EAAD,CACEU,KAAK,SACL,YAAWD,EACXE,QAAS,EAAKJ,MAAMK,gBAHtB,UCdYC,EDmBEJ,EClBlBI,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,ODY7BP,GCbD,IAAAI,c,GDIII,aEFjBnB,EAAQF,IAAOG,GAAV,+CCIZmB,EAAa,SAACX,GAClB,MAA+BA,EAAMvB,MAA7BU,EAAR,EAAQA,KAAMyB,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,gCACE,cAAC,EAAD,yBACA,uCAAU1B,KACV,0CAAayB,KACb,sCAASC,KACT,wCAAWrC,EAAmBwB,EAAMvB,UACpC,oDAAuBM,EAAgCiB,EAAMvB,cAKnEkC,EAAWG,aAAe,CACxBrC,MAAO,CACLU,KAAM,EACNyB,QAAS,EACTC,IAAK,IAYMF,I,IAAAA,ICnCFI,EAAY1B,IAAO2B,IAAV,0FCATC,EAAU5B,IAAO6B,QAAV,wECOdC,EAAeC,EAAgBxC,QAAO,SAACC,EAAKwC,GAC9C,OAAO,2BAAIxC,GAAX,eAAsBwC,EAAS,MAC/B,IAuBWC,E,4MApBbC,MAAQJ,E,EAERK,YAAc,SAACC,GACb,IAAMvB,EAAOuB,EAAEC,OAAOC,QAAQzB,KAE9B,EAAK0B,UAAS,SAACC,GAAD,sBAAsB3B,EAAO2B,EAAa3B,GAAQ,O,4CAGlE,WACE,OACE,cAACe,EAAD,UACE,eAACF,EAAD,WACE,cAAC,EAAD,CAAiBjB,WAAYsB,EAAiBf,gBAAiBN,KAAKyB,cACpE,cAAC,EAAD,CAAY/C,MAAOsB,KAAKwB,iB,GAdhBb,aCRlBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.dc80fe36.chunk.js","sourcesContent":["const countTotalFeedback = (stats) => {\r\n  return Object.values(stats).reduce((acc,value) => acc + value, 0);\r\n};\r\n\r\nexport default countTotalFeedback;","import countTotalFeedback from './countTotalFeedback'\r\n\r\nconst countPositiveFeedbackPercentage = (stats) => {\r\n\r\n  const positiveFeedbackPercentage = Math.round(stats.good / countTotalFeedback(stats) * 100)\r\n  return `${positiveFeedbackPercentage}%`;\r\n};\r\n\r\nexport default countPositiveFeedbackPercentage;","import styled from 'styled-components';\r\n\r\nexport const ListItem = styled.li`\r\n  list-style: none;\r\n  margin-right: 8px;\r\n  &:last-child{\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  color:red;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 8px;\r\n`;\r\n\r\nexport const ButtonList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\n","import React, { Component } from 'react';\r\nimport { capitalize } from '../../utils';\r\nimport { ListItem, Title, Button, ButtonList } from './StyledComponents';\r\n\r\nclass FeedBackOptions extends Component {\r\n  render() {\r\n    const { buttonList } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <Title>Please leave feedback</Title>\r\n        <ButtonList>\r\n          {buttonList && buttonList.map(name => (\r\n            <ListItem key={name}>\r\n              <Button\r\n                type='button'\r\n                data-name={name}\r\n                onClick={this.props.handleIncrement}\r\n              >\r\n                {capitalize(name)}\r\n              </Button>\r\n            </ListItem>\r\n          ))}\r\n        </ButtonList>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport  default FeedBackOptions;","export const capitalize = string => {\r\n  return (string.charAt(0).toUpperCase() + string.slice(1));\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h2`\r\n  color: #ffe600;\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Title } from './StyledComponents';\r\nimport countTotalFeedback from '../../utils/countTotalFeedback'\r\nimport countPositiveFeedbackPercentage from '../../utils/countPositiveFeedbackPercentage'\r\n\r\nconst Statistics = (props) => {\r\n  const { good, neutral, bad } = props.stats\r\n\r\n  return (\r\n    <div>\r\n      <Title>Statistics</Title>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {countTotalFeedback(props.stats)}</p>\r\n      <p>Positive feedback: {countPositiveFeedbackPercentage(props.stats)}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  stats: {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  }\r\n}\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.exact({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired\r\n  })\r\n}\r\n\r\nexport default Statistics;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 8px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n  margin-top: 60px;\r\n  text-align: center;\r\n`;","import feedbackOptions from './data/feedbackOptionsData.json'\r\n\r\nimport React, { Component } from 'react';\r\nimport FeedBackOptions from './components/FeedBackOptions/'\r\nimport Statistics\r\n  from './components/Statistics';\r\nimport { Container } from './components';\r\nimport { Section } from './components/Section';\r\n\r\nconst initialState = feedbackOptions.reduce((acc, option) => {\r\n    return {...acc, ...{ [option]: 1 }};\r\n  },{});\r\n\r\nclass App extends Component {\r\n  state = initialState;\r\n\r\n  manageState = (e) => {\r\n    const name = e.target.dataset.name\r\n\r\n    this.setState((currentState) => ({ [name]: currentState[name] + 1 }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section>\r\n        <Container>\r\n          <FeedBackOptions buttonList={feedbackOptions} handleIncrement={this.manageState} />\r\n          <Statistics stats={this.state}/>\r\n        </Container>\r\n      </Section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}