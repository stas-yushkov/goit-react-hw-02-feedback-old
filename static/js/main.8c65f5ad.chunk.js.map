{"version":3,"sources":["utils/countTotalFeedback.js","utils/countPositiveFeedbackPercentage.js","components/FeedbackOptions/StyledComponents.jsx","components/FeedbackOptions/FeedbackOptions.jsx","utils/capitalize.js","components/Statistics/Statistics.jsx","components/Section/StyledComponents.jsx","components/Section/Section.jsx","components/Notification/StyledComponents.jsx","components/Notification/Notification.jsx","components/Container.jsx","App.js","index.js"],"names":["countTotalFeedback","stats","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","positiveFeedbackPercentage","Math","round","good","ListItem","styled","li","Button","button","ButtonList","ul","FeedbackOptions","this","props","options","onLeaveFeedback","map","name","type","onClick","string","charAt","toUpperCase","slice","Component","Statistics","neutral","bad","total","positivePercentage","defaultProps","StyledSection","section","Title","h2","Section","title","children","StyledNotification","Notification","message","Container","div","initialState","feedbackOptions","option","App","state","manageState","e","target","dataset","setState","currentState","ReactDom","render","StrictMode","document","querySelector"],"mappings":"sVAIeA,EAJY,SAACC,GAC1B,OAAOC,OAAOC,OAAOF,GAAOG,QAAO,SAACC,EAAIC,GAAL,OAAeD,EAAMC,IAAO,ICOlDC,EANyB,SAACN,GAEvC,IAAMO,EAA6BC,KAAKC,MAAMT,EAAMU,KAAOX,EAAmBC,GAAS,KACvF,MAAM,GAAN,OAAUO,EAAV,M,cCHWI,EAAWC,IAAOC,GAAV,mHAQRC,EAASF,IAAOG,OAAV,6CAINC,EAAaJ,IAAOK,GAAV,+H,OCcPC,E,4JAvBd,WACE,MAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBAEjB,OACE,8BACE,cAACN,EAAD,UACGK,GAAWA,EAAQE,KAAI,SAAAC,GAAI,OAC1B,cAACb,EAAD,UACE,cAACG,EAAD,CACEW,KAAK,SACL,YAAWD,EACXE,QAASJ,EAHX,UCbYK,EDkBEH,ECjBlBG,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,ODW7BN,GCZD,IAAAG,a,GDIII,aEAxBC,EAAa,SAACZ,GAClB,IAAQV,EAAkDU,EAAlDV,KAAMuB,EAA4Cb,EAA5Ca,QAASC,EAAmCd,EAAnCc,IAAKC,EAA8Bf,EAA9Be,MAAOC,EAAuBhB,EAAvBgB,mBAEnC,OACE,gCACE,uCAAU1B,KACV,0CAAauB,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,SAK7BJ,EAAWK,aAAe,CACxBrC,MAAO,CACLU,KAAM,EACNuB,QAAS,EACTC,IAAK,IAYMF,I,UAAAA,IChCFM,EAAgB1B,IAAO2B,QAAV,wEAKbC,EAAQ5B,IAAO6B,GAAV,0CCMHC,EAVC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACN,EAAD,WACE,cAACE,EAAD,UAASG,IACPC,MCLKC,EAAqBjC,IAAO2B,QAAV,8BAIlBC,EAAQ5B,IAAO6B,GAAV,0CCKHK,EATM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEtB,OACE,cAACF,EAAD,UACE,cAAC,EAAD,UAASE,OCJFC,EAAYpC,IAAOqC,IAAV,0FCUhBC,EAAeC,EAAgBhD,QAAO,SAACC,EAAKgD,GAC9C,OAAO,2BAAIhD,GAAX,eAAsBgD,EAAS,MAC/B,IA+CWC,E,4MA5CbC,MAAQJ,E,EAERK,YAAc,SAACC,GACb,IAAMhC,EAAOgC,EAAEC,OAAOC,QAAQlC,KAE9B,EAAKmC,UAAS,SAACC,GAAD,sBAAsBpC,EAAOoC,EAAapC,GAAQ,O,4CAGlE,WACE,OACE,qCACE,cAAC,EAAD,CAASmB,MAAM,wBAAf,SACE,cAACK,EAAD,UACE,cAAC,EAAD,CAAiB3B,QAAS8B,EAAiB7B,gBAAiBH,KAAKoC,kBAIjC,IAAnCxD,EAAmBoB,KAAKmC,QACvB,cAAC,EAAD,UACE,cAACN,EAAD,UACE,cAAC,EAAD,CAAcD,QAAQ,0BAI3BhD,EAAmBoB,KAAKmC,OAAS,GAChC,cAAC,EAAD,CAASX,MAAM,aAAf,SACA,cAACK,EAAD,UACA,cAAC,EAAD,CACAtC,KAAMS,KAAKmC,MAAM5C,KACjBuB,QAASd,KAAKmC,MAAMrB,QACpBC,IAAKf,KAAKmC,MAAMpB,IAChBC,MAAOpC,EAAmBoB,KAAKmC,OAC/BlB,mBAAoB9B,EAAgCa,KAAKmC,oB,GAjCjDvB,aCXlB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.8c65f5ad.chunk.js","sourcesContent":["const countTotalFeedback = (stats) => {\r\n  return Object.values(stats).reduce((acc,value) => acc + value, 0);\r\n};\r\n\r\nexport default countTotalFeedback;","import countTotalFeedback from './countTotalFeedback'\r\n\r\nconst countPositiveFeedbackPercentage = (stats) => {\r\n\r\n  const positiveFeedbackPercentage = Math.round(stats.good / countTotalFeedback(stats) * 100)\r\n  return `${positiveFeedbackPercentage}%`;\r\n};\r\n\r\nexport default countPositiveFeedbackPercentage;","import styled from 'styled-components';\r\n\r\nexport const ListItem = styled.li`\r\n  list-style: none;\r\n  margin-right: 8px;\r\n  &:last-child{\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 8px;\r\n`;\r\n\r\nexport const ButtonList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\n","import React, { Component } from 'react';\r\nimport { capitalize } from '../../utils';\r\nimport { ListItem, Button, ButtonList } from './StyledComponents';\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    const { options, onLeaveFeedback } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <ButtonList>\r\n          {options && options.map(name => (\r\n            <ListItem key={name}>\r\n              <Button\r\n                type='button'\r\n                data-name={name}\r\n                onClick={onLeaveFeedback}\r\n              >\r\n                {capitalize(name)}\r\n              </Button>\r\n            </ListItem>\r\n          ))}\r\n        </ButtonList>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport  default FeedbackOptions;","export const capitalize = string => {\r\n  return (string.charAt(0).toUpperCase() + string.slice(1));\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Statistics = (props) => {\r\n  const { good, neutral, bad, total, positivePercentage } = props\r\n\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  stats: {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  }\r\n}\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.exact({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired\r\n  })\r\n}\r\n\r\nexport default Statistics;","import styled from 'styled-components';\r\n\r\nexport const StyledSection = styled.section`\r\n  margin-top: 60px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  color:red;\r\n`;","import React from 'react';\r\nimport { StyledSection, Title } from './StyledComponents';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <StyledSection>\r\n      <Title>{ title }</Title>\r\n      { children }\r\n    </StyledSection>\r\n  )\r\n\r\n};\r\n\r\nexport default Section;","import styled from 'styled-components';\r\n\r\nexport const StyledNotification = styled.section`\r\n\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  color:red;\r\n`;","import { StyledNotification, Title } from './StyledComponents';\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n  return (\r\n    <StyledNotification>\r\n      <Title>{ message }</Title>\r\n    </StyledNotification>\r\n  )\r\n}\r\n\r\nexport default Notification;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 8px;\r\n`;","import feedbackOptions from './data/feedbackOptionsData.json'\r\n\r\nimport React, { Component } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOptions/'\r\nimport Statistics\r\n  from './components/Statistics';\r\nimport Section from './components/Section'\r\nimport Notification from './components/Notification'\r\nimport { Container } from './components';\r\nimport countTotalFeedback from './utils/countTotalFeedback'\r\nimport countPositiveFeedbackPercentage from './utils/countPositiveFeedbackPercentage'\r\n\r\nconst initialState = feedbackOptions.reduce((acc, option) => {\r\n    return {...acc, ...{ [option]: 0 }};\r\n  },{});\r\n\r\nclass App extends Component {\r\n  state = initialState;\r\n\r\n  manageState = (e) => {\r\n    const name = e.target.dataset.name\r\n\r\n    this.setState((currentState) => ({ [name]: currentState[name] + 1 }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title='Please leave feedback'>\r\n          <Container>\r\n            <FeedbackOptions options={feedbackOptions} onLeaveFeedback={this.manageState} />\r\n          </Container>\r\n        </Section>\r\n\r\n        {countTotalFeedback(this.state) === 0 && (\r\n          <Section>\r\n            <Container>\r\n              <Notification message=\"No feedback given\"/>\r\n            </Container>\r\n          </Section>\r\n        )}\r\n        {countTotalFeedback(this.state) > 0 && (\r\n          <Section title='Statistics'>\r\n          <Container>\r\n          <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          total={countTotalFeedback(this.state)}\r\n          positivePercentage={countPositiveFeedbackPercentage(this.state)}\r\n          />\r\n          </Container>\r\n          </Section>\r\n          )}\r\n\r\n      </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}